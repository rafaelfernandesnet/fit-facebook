[ { fileInfo: 
     { fileReader: 'jsdocFileReader',
       filePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public/modules/ff-news/ff.news.app.js',
       baseName: 'ff.news.app',
       extension: 'js',
       basePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public',
       relativePath: 'modules/ff-news/ff.news.app.js',
       projectRelativePath: 'modules/ff-news/ff.news.app.js',
       content: 'var newsFeed = require(\'./ff.news.feed.directive.js\');\nvar newsPost = require(\'./ff.news.post.directive.js\');\n\n/**\n * Responsible for news content\n *\n * @ngdoc module\n * @name ff.newsModule \n */\nangular.module(\'ff.newsModule\', [\'ff.coreModule\'])\n       .factory(\'ffNewsService\', require(\'./ff.news.service.js\'))\n       .directive(newsFeed.name, newsFeed.directive)\n       .controller(newsFeed.controllerName, newsFeed.controller)\n       .directive(newsPost.name, newsPost.directive)\n       .controller(newsPost.controllerName, newsPost.controller)\n',
       ast: [Object] },
    startingLine: 4,
    endingLine: 9,
    content: 'Responsible for news content\n\n@ngdoc module\n@name ff.newsModule',
    codeNode: 
     { type: 'ExpressionStatement',
       expression: [Object],
       range: [Object],
       loc: [Object],
       leadingComments: [Object] },
    codeAncestors: [ [Object] ],
    docType: 'module',
    tags: 
     { tags: [Object],
       tagsByName: [Object],
       badTags: [],
       description: 'Responsible for news content\n' },
    name: 'ff.newsModule',
    description: 'Responsible for news content\n',
    area: 'api',
    module: 'modules',
    priority: 0,
    codeName: 'controller',
    id: 'module:ff.newsModule',
    aliases: [ 'ff.newsModule', 'module:ff.newsModule' ],
    components: [ [Object], [Object], [Object], [Object], [Object] ],
    componentGroups: [ [Object], [Object], [Object] ],
    path: 'api/ff.newsModule/index.html',
    outputPath: 'api/ff.newsModule/index.html',
    renderedContent: '<h1>ff.newsModule</h1>\n<p>Responsible for news content</p>\n\n' },
  { fileInfo: 
     { fileReader: 'jsdocFileReader',
       filePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public/modules/ff-news/ff.news.feed.directive.js',
       baseName: 'ff.news.feed.directive',
       extension: 'js',
       basePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public',
       relativePath: 'modules/ff-news/ff.news.feed.directive.js',
       projectRelativePath: 'modules/ff-news/ff.news.feed.directive.js',
       content: '/**\n * @ngdoc directive\n * @module ff.newsModule\n * @name ffNewsFeed\n * @description Directive responsible to render the news feed. \n * Link to my module : {@link ff.newModule }\n * [Link to the code](https://github.com/rafaelfernandesnet/fit-facebook/blob/master/www/public/modules/ff-news/ff.news.feed.directive.js)\n * @example \n * <ff-news-feed> </ff-news-feed>\n */\nfunction ffNewsFeed() {\n    return {\n        restrict: \'E\',\n        transclude: true,\n        scope: true,\n        templateUrl: \'./modules/ff-news/ff.news.feed.directive.tmpl.html\',\n        controller: \'ffNewsFeedController as vm\',\n        replace: true,\n        link: function(scope, element, attrs) {\n\n        }\n    };\n}\n\n/**\n * @ngdoc controller\n * @module ff.newsModule\n * @name ffNewsFeedController\n * @description Controller responsible for the news feed.\n */\nfunction ffNewsFeedController($scope, $rootScope, ffNewsService, $timeout, _){\n  var vm = this;\n  var reloadNewsEvery = 10000;\n  var plainNewsInfo;\n  $scope.$on(\'authenticated\', loadActivities);\n  $scope.$on(\'contentUpdated\', loadActivities);\n\n  if ($rootScope.token){\n    loadActivities();\n  }\n\n  function loadActivities(){\n    ffNewsService.activities(populateNews);\n    autoUpdate();\n  }\n\n  function autoUpdate(){\n    $timeout(function(){\n      ffNewsService.activities(populateNews);\n      autoUpdate();\n    }, reloadNewsEvery);\n  }\n\n  function populateNews(result){\n    if (angular.toJson(vm.news) === angular.toJson(result.data)) return;\n    vm.news = result.data; \n  }\n}\n\nmodule.exports = {\n  directive: [ffNewsFeed],\n  name: \'ffNewsFeed\',\n  controller: [\'$scope\', \'$rootScope\',\'ffNewsService\', \'$timeout\', \'_\', ffNewsFeedController],\n  controllerName: \'ffNewsFeedController\'\n};\n\n',
       ast: [Object] },
    startingLine: 1,
    endingLine: 10,
    content: '@ngdoc directive\n@module ff.newsModule\n@name ffNewsFeed\n@description Directive responsible to render the news feed. \nLink to my module : {@link ff.newModule }\n[Link to the code](https://github.com/rafaelfernandesnet/fit-facebook/blob/master/www/public/modules/ff-news/ff.news.feed.directive.js)\n@example \n<ff-news-feed> </ff-news-feed>',
    codeNode: 
     { type: 'Program',
       body: [Object],
       sourceType: 'module',
       range: [Object],
       loc: [Object],
       comments: [Object],
       tokens: [Object],
       errors: [] },
    codeAncestors: [],
    docType: 'directive',
    tags: 
     { tags: [Object],
       tagsByName: [Object],
       badTags: [],
       description: '' },
    name: 'ffNewsFeed',
    module: 'ff.newsModule',
    description: 'Directive responsible to render the news feed. \nLink to my module : {@link ff.newModule }\n[Link to the code](https://github.com/rafaelfernandesnet/fit-facebook/blob/master/www/public/modules/ff-news/ff.news.feed.directive.js)',
    area: 'api',
    restrict: 
     { element: false,
       attribute: true,
       cssClass: false,
       comment: false },
    examples: [ '<ff-news-feed> </ff-news-feed>' ],
    element: 'ANY',
    priority: 0,
    example: '<ff-news-feed> </ff-news-feed>',
    codeName: 'ffNewsFeed',
    id: 'module:ff.newsModule.directive:ffNewsFeed',
    aliases: 
     [ 'ffNewsFeed',
       'directive:ffNewsFeed',
       'ff.newsModule.ffNewsFeed',
       'module:ff.newsModule.ffNewsFeed',
       'ff.newsModule.directive:ffNewsFeed',
       'module:ff.newsModule.directive:ffNewsFeed' ],
    moduleDoc: 
     { fileInfo: [Object],
       startingLine: 4,
       endingLine: 9,
       content: 'Responsible for news content\n\n@ngdoc module\n@name ff.newsModule',
       codeNode: [Object],
       codeAncestors: [Object],
       docType: 'module',
       tags: [Object],
       name: 'ff.newsModule',
       description: 'Responsible for news content\n',
       area: 'api',
       module: 'modules',
       priority: 0,
       codeName: 'controller',
       id: 'module:ff.newsModule',
       aliases: [Object],
       components: [Object],
       componentGroups: [Object],
       path: 'api/ff.newsModule/index.html',
       outputPath: 'api/ff.newsModule/index.html',
       renderedContent: '<h1>ff.newsModule</h1>\n<p>Responsible for news content</p>\n\n' },
    path: 'api/ff.newsModule/directive/ffNewsFeed.html',
    outputPath: 'api/ff.newsModule/directive/ffNewsFeed.html',
    renderedContent: '<h1>ffNewsFeed</h1>\n<p>Directive responsible to render the news feed. \nLink to my module : {@link ff.newModule }\n<a href="https://github.com/rafaelfernandesnet/fit-facebook/blob/master/www/public/modules/ff-news/ff.news.feed.directive.js">Link to the code</a></p>\n\n' },
  { fileInfo: 
     { fileReader: 'jsdocFileReader',
       filePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public/modules/ff-news/ff.news.feed.directive.js',
       baseName: 'ff.news.feed.directive',
       extension: 'js',
       basePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public',
       relativePath: 'modules/ff-news/ff.news.feed.directive.js',
       projectRelativePath: 'modules/ff-news/ff.news.feed.directive.js',
       content: '/**\n * @ngdoc directive\n * @module ff.newsModule\n * @name ffNewsFeed\n * @description Directive responsible to render the news feed. \n * Link to my module : {@link ff.newModule }\n * [Link to the code](https://github.com/rafaelfernandesnet/fit-facebook/blob/master/www/public/modules/ff-news/ff.news.feed.directive.js)\n * @example \n * <ff-news-feed> </ff-news-feed>\n */\nfunction ffNewsFeed() {\n    return {\n        restrict: \'E\',\n        transclude: true,\n        scope: true,\n        templateUrl: \'./modules/ff-news/ff.news.feed.directive.tmpl.html\',\n        controller: \'ffNewsFeedController as vm\',\n        replace: true,\n        link: function(scope, element, attrs) {\n\n        }\n    };\n}\n\n/**\n * @ngdoc controller\n * @module ff.newsModule\n * @name ffNewsFeedController\n * @description Controller responsible for the news feed.\n */\nfunction ffNewsFeedController($scope, $rootScope, ffNewsService, $timeout, _){\n  var vm = this;\n  var reloadNewsEvery = 10000;\n  var plainNewsInfo;\n  $scope.$on(\'authenticated\', loadActivities);\n  $scope.$on(\'contentUpdated\', loadActivities);\n\n  if ($rootScope.token){\n    loadActivities();\n  }\n\n  function loadActivities(){\n    ffNewsService.activities(populateNews);\n    autoUpdate();\n  }\n\n  function autoUpdate(){\n    $timeout(function(){\n      ffNewsService.activities(populateNews);\n      autoUpdate();\n    }, reloadNewsEvery);\n  }\n\n  function populateNews(result){\n    if (angular.toJson(vm.news) === angular.toJson(result.data)) return;\n    vm.news = result.data; \n  }\n}\n\nmodule.exports = {\n  directive: [ffNewsFeed],\n  name: \'ffNewsFeed\',\n  controller: [\'$scope\', \'$rootScope\',\'ffNewsService\', \'$timeout\', \'_\', ffNewsFeedController],\n  controllerName: \'ffNewsFeedController\'\n};\n\n',
       ast: [Object] },
    startingLine: 25,
    endingLine: 30,
    content: '@ngdoc controller\n@module ff.newsModule\n@name ffNewsFeedController\n@description Controller responsible for the news feed.',
    codeNode: 
     { type: 'FunctionDeclaration',
       id: [Object],
       params: [Object],
       body: [Object],
       generator: false,
       expression: false,
       range: [Object],
       loc: [Object],
       leadingComments: [Object] },
    codeAncestors: [ [Object] ],
    docType: 'controller',
    tags: 
     { tags: [Object],
       tagsByName: [Object],
       badTags: [],
       description: '' },
    name: 'ffNewsFeedController',
    module: 'ff.newsModule',
    description: 'Controller responsible for the news feed.',
    area: 'api',
    priority: 0,
    codeName: 'ffNewsFeedController',
    id: 'module:ff.newsModule.controller:ffNewsFeedController',
    aliases: 
     [ 'ffNewsFeedController',
       'controller:ffNewsFeedController',
       'ff.newsModule.ffNewsFeedController',
       'module:ff.newsModule.ffNewsFeedController',
       'ff.newsModule.controller:ffNewsFeedController',
       'module:ff.newsModule.controller:ffNewsFeedController' ],
    moduleDoc: 
     { fileInfo: [Object],
       startingLine: 4,
       endingLine: 9,
       content: 'Responsible for news content\n\n@ngdoc module\n@name ff.newsModule',
       codeNode: [Object],
       codeAncestors: [Object],
       docType: 'module',
       tags: [Object],
       name: 'ff.newsModule',
       description: 'Responsible for news content\n',
       area: 'api',
       module: 'modules',
       priority: 0,
       codeName: 'controller',
       id: 'module:ff.newsModule',
       aliases: [Object],
       components: [Object],
       componentGroups: [Object],
       path: 'api/ff.newsModule/index.html',
       outputPath: 'api/ff.newsModule/index.html',
       renderedContent: '<h1>ff.newsModule</h1>\n<p>Responsible for news content</p>\n\n' },
    path: 'api/ff.newsModule/controller/ffNewsFeedController.html',
    outputPath: 'api/ff.newsModule/controller/ffNewsFeedController.html',
    renderedContent: '<h1>ffNewsFeedController</h1>\n<p>Controller responsible for the news feed.</p>\n\n' },
  { fileInfo: 
     { fileReader: 'jsdocFileReader',
       filePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public/modules/ff-news/ff.news.post.directive.js',
       baseName: 'ff.news.post.directive',
       extension: 'js',
       basePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public',
       relativePath: 'modules/ff-news/ff.news.post.directive.js',
       projectRelativePath: 'modules/ff-news/ff.news.post.directive.js',
       content: '/**\n * @ngdoc directive\n * @module ff.newsModule\n * @name ffNewsPost\n * @description Directive responsible to post new status. \n * @example\n * <ff-news-post> </ff-news-post>\n */\nfunction ffNewsPost() {\n  return {\n    restrict: \'E\',\n    transclude: true,\n    templateUrl: \'./modules/ff-news/ff.news.post.directive.tmpl.html\',\n    controller: \'ffNewsPostController as vm\',\n    scope: true,\n    replace: true,\n    link: function(scope, element, attrs) {\n\n    }\n  };\n}\n\n/**\n * @ngdoc directive \n * @module ff.newsModule\n * @name ffNewsPostController\n * @description Controller responsible for the news post.\n */\nfunction ffNewsPostController($scope, $rootScope, ffNewsService){\n  var vm = this;\n  vm.test = \'This directive is bound.\'\n  vm.post = post;\n\n  function post(){\n    vm.waiting = true;\n    ffNewsService.post(vm.message, updateContent, failedToPost);  \n  }\n \n  function failedToPost(){\n    vm.waiting = false;\n  }\n\n  function updateContent(){\n    $rootScope.$broadcast(\'contentUpdated\');\n    vm.message = \'\';\n    vm.waiting = false;\n  }\n}\n\nmodule.exports = {\n  directive: [ffNewsPost],\n  name: \'ffNewsPost\',\n  controller: [\'$scope\', \'$rootScope\',\'ffNewsService\', ffNewsPostController],\n  controllerName: \'ffNewsPostController\'\n};\n\n',
       ast: [Object] },
    startingLine: 1,
    endingLine: 8,
    content: '@ngdoc directive\n@module ff.newsModule\n@name ffNewsPost\n@description Directive responsible to post new status. \n@example\n<ff-news-post> </ff-news-post>',
    codeNode: 
     { type: 'Program',
       body: [Object],
       sourceType: 'module',
       range: [Object],
       loc: [Object],
       comments: [Object],
       tokens: [Object],
       errors: [] },
    codeAncestors: [],
    docType: 'directive',
    tags: 
     { tags: [Object],
       tagsByName: [Object],
       badTags: [],
       description: '' },
    name: 'ffNewsPost',
    module: 'ff.newsModule',
    description: 'Directive responsible to post new status.',
    area: 'api',
    restrict: 
     { element: false,
       attribute: true,
       cssClass: false,
       comment: false },
    examples: [ '<ff-news-post> </ff-news-post>' ],
    element: 'ANY',
    priority: 0,
    example: '<ff-news-post> </ff-news-post>',
    codeName: 'ffNewsPost',
    id: 'module:ff.newsModule.directive:ffNewsPost',
    aliases: 
     [ 'ffNewsPost',
       'directive:ffNewsPost',
       'ff.newsModule.ffNewsPost',
       'module:ff.newsModule.ffNewsPost',
       'ff.newsModule.directive:ffNewsPost',
       'module:ff.newsModule.directive:ffNewsPost' ],
    moduleDoc: 
     { fileInfo: [Object],
       startingLine: 4,
       endingLine: 9,
       content: 'Responsible for news content\n\n@ngdoc module\n@name ff.newsModule',
       codeNode: [Object],
       codeAncestors: [Object],
       docType: 'module',
       tags: [Object],
       name: 'ff.newsModule',
       description: 'Responsible for news content\n',
       area: 'api',
       module: 'modules',
       priority: 0,
       codeName: 'controller',
       id: 'module:ff.newsModule',
       aliases: [Object],
       components: [Object],
       componentGroups: [Object],
       path: 'api/ff.newsModule/index.html',
       outputPath: 'api/ff.newsModule/index.html',
       renderedContent: '<h1>ff.newsModule</h1>\n<p>Responsible for news content</p>\n\n' },
    path: 'api/ff.newsModule/directive/ffNewsPost.html',
    outputPath: 'api/ff.newsModule/directive/ffNewsPost.html',
    renderedContent: '<h1>ffNewsPost</h1>\n<p>Directive responsible to post new status.</p>\n\n' },
  { fileInfo: 
     { fileReader: 'jsdocFileReader',
       filePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public/modules/ff-news/ff.news.post.directive.js',
       baseName: 'ff.news.post.directive',
       extension: 'js',
       basePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public',
       relativePath: 'modules/ff-news/ff.news.post.directive.js',
       projectRelativePath: 'modules/ff-news/ff.news.post.directive.js',
       content: '/**\n * @ngdoc directive\n * @module ff.newsModule\n * @name ffNewsPost\n * @description Directive responsible to post new status. \n * @example\n * <ff-news-post> </ff-news-post>\n */\nfunction ffNewsPost() {\n  return {\n    restrict: \'E\',\n    transclude: true,\n    templateUrl: \'./modules/ff-news/ff.news.post.directive.tmpl.html\',\n    controller: \'ffNewsPostController as vm\',\n    scope: true,\n    replace: true,\n    link: function(scope, element, attrs) {\n\n    }\n  };\n}\n\n/**\n * @ngdoc directive \n * @module ff.newsModule\n * @name ffNewsPostController\n * @description Controller responsible for the news post.\n */\nfunction ffNewsPostController($scope, $rootScope, ffNewsService){\n  var vm = this;\n  vm.test = \'This directive is bound.\'\n  vm.post = post;\n\n  function post(){\n    vm.waiting = true;\n    ffNewsService.post(vm.message, updateContent, failedToPost);  \n  }\n \n  function failedToPost(){\n    vm.waiting = false;\n  }\n\n  function updateContent(){\n    $rootScope.$broadcast(\'contentUpdated\');\n    vm.message = \'\';\n    vm.waiting = false;\n  }\n}\n\nmodule.exports = {\n  directive: [ffNewsPost],\n  name: \'ffNewsPost\',\n  controller: [\'$scope\', \'$rootScope\',\'ffNewsService\', ffNewsPostController],\n  controllerName: \'ffNewsPostController\'\n};\n\n',
       ast: [Object] },
    startingLine: 23,
    endingLine: 28,
    content: '@ngdoc directive \n@module ff.newsModule\n@name ffNewsPostController\n@description Controller responsible for the news post.',
    codeNode: 
     { type: 'FunctionDeclaration',
       id: [Object],
       params: [Object],
       body: [Object],
       generator: false,
       expression: false,
       range: [Object],
       loc: [Object],
       leadingComments: [Object] },
    codeAncestors: [ [Object] ],
    docType: 'directive',
    tags: 
     { tags: [Object],
       tagsByName: [Object],
       badTags: [],
       description: '' },
    name: 'ffNewsPostController',
    module: 'ff.newsModule',
    description: 'Controller responsible for the news post.',
    area: 'api',
    restrict: 
     { element: false,
       attribute: true,
       cssClass: false,
       comment: false },
    element: 'ANY',
    priority: 0,
    codeName: 'ffNewsPostController',
    id: 'module:ff.newsModule.directive:ffNewsPostController',
    aliases: 
     [ 'ffNewsPostController',
       'directive:ffNewsPostController',
       'ff.newsModule.ffNewsPostController',
       'module:ff.newsModule.ffNewsPostController',
       'ff.newsModule.directive:ffNewsPostController',
       'module:ff.newsModule.directive:ffNewsPostController' ],
    moduleDoc: 
     { fileInfo: [Object],
       startingLine: 4,
       endingLine: 9,
       content: 'Responsible for news content\n\n@ngdoc module\n@name ff.newsModule',
       codeNode: [Object],
       codeAncestors: [Object],
       docType: 'module',
       tags: [Object],
       name: 'ff.newsModule',
       description: 'Responsible for news content\n',
       area: 'api',
       module: 'modules',
       priority: 0,
       codeName: 'controller',
       id: 'module:ff.newsModule',
       aliases: [Object],
       components: [Object],
       componentGroups: [Object],
       path: 'api/ff.newsModule/index.html',
       outputPath: 'api/ff.newsModule/index.html',
       renderedContent: '<h1>ff.newsModule</h1>\n<p>Responsible for news content</p>\n\n' },
    path: 'api/ff.newsModule/directive/ffNewsPostController.html',
    outputPath: 'api/ff.newsModule/directive/ffNewsPostController.html',
    renderedContent: '<h1>ffNewsPostController</h1>\n<p>Controller responsible for the news post.</p>\n\n' },
  { fileInfo: 
     { fileReader: 'jsdocFileReader',
       filePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public/modules/ff-news/ff.news.service.js',
       baseName: 'ff.news.service',
       extension: 'js',
       basePath: '/Users/rafaelfernandes/Projects/fit-facebook/www/public',
       relativePath: 'modules/ff-news/ff.news.service.js',
       projectRelativePath: 'modules/ff-news/ff.news.service.js',
       content: '/**\n * Responsible for managing the news \n *\n * @ngdoc service\n * @name ffNewsService\n * @module ff.newsModule\n * @requires $http, $windows, $rootScope\n */\nfunction ffNewsService($http, $window, $rootScope) {\n\n  return {\n    post: post,\n    activities: activities\n  };\n\n\n  /**\n   * Post a new status.\n   *\n   * @ngdoc method \n   * @name ffNewsService#post  \n   * @param {String}   message New status information. \n   * @param {function} fnSuccess Executes when successfully\n   *                        post a new status.\n   * @param {function} fnError Executes when fail to \n   *                        a new status.\n   */\n  function post(message, fnSuccess, fnError) {\n    debugger;\n    return $http.post(\'/facebook/me/feed?message=\' + encodeURIComponent(message))\n      .success(function(data, status, headers) {\n        if (fnSuccess){\n          fnSuccess(data);\n        }\n        // console.log(\'configuration loaded\');\t    \n      })\n      .error(function(data, status, headers) {\n        if (fnError){\n          fnError(data);\n        }\n        console.log(\'ffNewsService failed to post\');\n      });\n  }\n\n  /**\n   * Retrieve the news feed.\n   *\n   * @ngdoc method \n   * @name ffNewsService#activities  \n   * @param {function} fnSuccess Executes when successfully retrieves\n   *                        the news feed.\n   * @param {function} fnError Executes when fail to retrieve\n   *                        the news feed.\n   */\n  function activities(fnSuccess, fnError) {\n    return $http.get(\'/facebook/me/feed\')\n      .success(function(data, status, headers) {\n        if (fnSuccess)    {\n          fnSuccess(data);\n        }\n      })\n      .error(function(data, status, headers) {\n        if (fnError){\n          fnError(data);\n        }\n        console.log(\'ffNewsService failed to get news\');\n      });\n  }\n}\n\nmodule.exports = [\'$http\', \'$window\', \'$rootScope\', ffNewsService];\n',
       ast: [Object] },
    startingLine: 1,
    endingLine: 8,
    content: 'Responsible for managing the news \n\n@ngdoc service\n@name ffNewsService\n@module ff.newsModule\n@requires $http, $windows, $rootScope',
    codeNode: 
     { type: 'Program',
       body: [Object],
       sourceType: 'module',
       range: [Object],
       loc: [Object],
       comments: [Object],
       tokens: [Object],
       errors: [] },
    codeAncestors: [],
    docType: 'service',
    tags: 
     { tags: [Object],
       tagsByName: [Object],
       badTags: [],
       description: 'Responsible for managing the news \n' },
    name: 'ffNewsService',
    requires: [ '$http, $windows, $rootScope' ],
    module: 'ff.newsModule',
    description: 'Responsible for managing the news \n',
    area: 'api',
    priority: 0,
    codeName: 'ffNewsService',
    id: 'module:ff.newsModule.service:ffNewsService',
    aliases: 
     [ 'ffNewsService',
       'service:ffNewsService',
       'ff.newsModule.ffNewsService',
       'module:ff.newsModule.ffNewsService',
       'ff.newsModule.service:ffNewsService',
       'module:ff.newsModule.service:ffNewsService' ],
    methods: [ [Object], [Object] ],
    moduleDoc: 
     { fileInfo: [Object],
       startingLine: 4,
       endingLine: 9,
       content: 'Responsible for news content\n\n@ngdoc module\n@name ff.newsModule',
       codeNode: [Object],
       codeAncestors: [Object],
       docType: 'module',
       tags: [Object],
       name: 'ff.newsModule',
       description: 'Responsible for news content\n',
       area: 'api',
       module: 'modules',
       priority: 0,
       codeName: 'controller',
       id: 'module:ff.newsModule',
       aliases: [Object],
       components: [Object],
       componentGroups: [Object],
       path: 'api/ff.newsModule/index.html',
       outputPath: 'api/ff.newsModule/index.html',
       renderedContent: '<h1>ff.newsModule</h1>\n<p>Responsible for news content</p>\n\n' },
    path: 'api/ff.newsModule/service/ffNewsService.html',
    outputPath: 'api/ff.newsModule/service/ffNewsService.html',
    renderedContent: '<h1>ffNewsService</h1>\n<p>Responsible for managing the news </p>\n\n' },
  { docType: 'index',
    path: '/',
    outputPath: 'index.html',
    childDocs: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ],
    id: 'index-doc',
    aliases: [ 'index-doc' ],
    renderedContent: '<html>\n  <body>\n    <h1>Fit App</h1>\n    <div>\n      \n      <h2><a href="api/ff.newsModule/index.html">ff.newsModule</a></h2>\n      <p>Responsible for news content</p>\n\n      \n      <h2><a href="api/ff.newsModule/directive/ffNewsFeed.html">ffNewsFeed</a></h2>\n      <p>Directive responsible to render the news feed. \nLink to my module : {@link ff.newModule }\n<a href="https://github.com/rafaelfernandesnet/fit-facebook/blob/master/www/public/modules/ff-news/ff.news.feed.directive.js">Link to the code</a></p>\n\n      \n      <h2><a href="api/ff.newsModule/controller/ffNewsFeedController.html">ffNewsFeedController</a></h2>\n      <p>Controller responsible for the news feed.</p>\n\n      \n      <h2><a href="api/ff.newsModule/directive/ffNewsPost.html">ffNewsPost</a></h2>\n      <p>Directive responsible to post new status.</p>\n\n      \n      <h2><a href="api/ff.newsModule/directive/ffNewsPostController.html">ffNewsPostController</a></h2>\n      <p>Controller responsible for the news post.</p>\n\n      \n      <h2><a href="api/ff.newsModule/service/ffNewsService.html">ffNewsService</a></h2>\n      <p>Responsible for managing the news </p>\n\n      \n      <h2><a href="">post</a></h2>\n      <p>Post a new status.</p>\n\n      \n      <h2><a href="">activities</a></h2>\n      <p>Retrieve the news feed.</p>\n\n      \n    </div>\n  </body>\n</html>\n\n\n' },
  { id: 'module:ff.newsModule.directive',
    docType: 'componentGroup',
    groupType: 'directive',
    moduleName: 'ff.newsModule',
    moduleDoc: 
     { fileInfo: [Object],
       startingLine: 4,
       endingLine: 9,
       content: 'Responsible for news content\n\n@ngdoc module\n@name ff.newsModule',
       codeNode: [Object],
       codeAncestors: [Object],
       docType: 'module',
       tags: [Object],
       name: 'ff.newsModule',
       description: 'Responsible for news content\n',
       area: 'api',
       module: 'modules',
       priority: 0,
       codeName: 'controller',
       id: 'module:ff.newsModule',
       aliases: [Object],
       components: [Object],
       componentGroups: [Object],
       path: 'api/ff.newsModule/index.html',
       outputPath: 'api/ff.newsModule/index.html',
       renderedContent: '<h1>ff.newsModule</h1>\n<p>Responsible for news content</p>\n\n' },
    area: 'api',
    name: 'directive components in ff.newsModule',
    components: [ [Object], [Object], [Object] ],
    path: 'api/ff.newsModule/directive/index.html',
    outputPath: 'api/ff.newsModule/directive/index.html',
    renderedContent: '<h1>directive components in ff.newsModule</h1>\n<p></p>\n\n\n<h2>{@link module:ff.newsModule.directive:ffNewsFeed }</h2>\n\n<h2>{@link module:ff.newsModule.directive:ffNewsPost }</h2>\n\n<h2>{@link module:ff.newsModule.directive:ffNewsPostController }</h2>\n' },
  { id: 'module:ff.newsModule.controller',
    docType: 'componentGroup',
    groupType: 'controller',
    moduleName: 'ff.newsModule',
    moduleDoc: 
     { fileInfo: [Object],
       startingLine: 4,
       endingLine: 9,
       content: 'Responsible for news content\n\n@ngdoc module\n@name ff.newsModule',
       codeNode: [Object],
       codeAncestors: [Object],
       docType: 'module',
       tags: [Object],
       name: 'ff.newsModule',
       description: 'Responsible for news content\n',
       area: 'api',
       module: 'modules',
       priority: 0,
       codeName: 'controller',
       id: 'module:ff.newsModule',
       aliases: [Object],
       components: [Object],
       componentGroups: [Object],
       path: 'api/ff.newsModule/index.html',
       outputPath: 'api/ff.newsModule/index.html',
       renderedContent: '<h1>ff.newsModule</h1>\n<p>Responsible for news content</p>\n\n' },
    area: 'api',
    name: 'controller components in ff.newsModule',
    components: [ [Object] ],
    path: 'api/ff.newsModule/controller/index.html',
    outputPath: 'api/ff.newsModule/controller/index.html',
    renderedContent: '<h1>controller components in ff.newsModule</h1>\n<p></p>\n\n\n<h2>{@link module:ff.newsModule.controller:ffNewsFeedController }</h2>\n' },
  { id: 'module:ff.newsModule.service',
    docType: 'componentGroup',
    groupType: 'service',
    moduleName: 'ff.newsModule',
    moduleDoc: 
     { fileInfo: [Object],
       startingLine: 4,
       endingLine: 9,
       content: 'Responsible for news content\n\n@ngdoc module\n@name ff.newsModule',
       codeNode: [Object],
       codeAncestors: [Object],
       docType: 'module',
       tags: [Object],
       name: 'ff.newsModule',
       description: 'Responsible for news content\n',
       area: 'api',
       module: 'modules',
       priority: 0,
       codeName: 'controller',
       id: 'module:ff.newsModule',
       aliases: [Object],
       components: [Object],
       componentGroups: [Object],
       path: 'api/ff.newsModule/index.html',
       outputPath: 'api/ff.newsModule/index.html',
       renderedContent: '<h1>ff.newsModule</h1>\n<p>Responsible for news content</p>\n\n' },
    area: 'api',
    name: 'service components in ff.newsModule',
    components: [ [Object] ],
    path: 'api/ff.newsModule/service/index.html',
    outputPath: 'api/ff.newsModule/service/index.html',
    renderedContent: '<h1>service components in ff.newsModule</h1>\n<p></p>\n\n\n<h2>{@link module:ff.newsModule.service:ffNewsService }</h2>\n' } ]